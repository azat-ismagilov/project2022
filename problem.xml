<?xml version="1.0" encoding="utf-8" standalone="no"?>
<problem revision="19" short-name="sum-on-positions" url="https://polygon.codeforces.com/p67Gg66/ismagilov.code/sum-on-positions">
        
    <names>
                
        <name language="russian" value="Занятная сумма"/>
            
    </names>
        
    <statements>
                
        <statement charset="UTF-8" language="russian" mathjax="true" path="statements/russian/problem.tex" type="application/x-tex"/>
                
        <statement charset="UTF-8" language="russian" mathjax="true" path="statements/.html/russian/problem.html" type="text/html"/>
                
        <statement language="russian" path="statements/.pdf/russian/problem.pdf" type="application/pdf"/>
            
    </statements>
        
    <judging cpu-name="Intel(R) Core(TM) i3-8100 CPU @ 3.60GHz" cpu-speed="3600" input-file="" output-file="">
                
        <testset name="tests">
                        
            <time-limit>2000</time-limit>
                        
            <memory-limit>268435456</memory-limit>
                        
            <test-count>51</test-count>
                        
            <input-path-pattern>tests/%02d</input-path-pattern>
                        
            <answer-path-pattern>tests/%02d.a</answer-path-pattern>
                        
            <tests>
                                
                <test method="manual" points="0.0" sample="true"/>
                                
                <test cmd="gen 1 200 200 50 50 50" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200 200 50 0 0" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 1000 1000 50 50 50" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 1000 1000 50 0 0" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 1000 1000 20 0 0" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 46 46" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 46 46" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 52 52" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 52 52" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 58 58" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 58 58" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 64 64" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 64 64" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 70 70" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 70 70" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 76 76" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 76 76" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 82 82" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 82 82" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 88 88" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 88 88" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 94 94" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 94 94" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 50 100 100" method="generated" points="2.0"/>
                                
                <test cmd="gen 3 200000 200000 20 100 100" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 50 60 60" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 30 60 60" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 20 60 60" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 7 60 60" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 2 60 60" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 50 70 70" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 30 70 70" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 20 70 70" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 7 70 70" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 2 70 70" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 50 80 80" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 30 80 80" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 20 80 80" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 7 80 80" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 2 80 80" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 50 90 90" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 30 90 90" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 20 90 90" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 7 90 90" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 2 90 90" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 50 100 100" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 30 100 100" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 20 100 100" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 7 100 100" method="generated" points="2.0"/>
                                
                <test cmd="gen 1 200000 200000 2 100 100" method="generated" points="2.0"/>
                            
            </tests>
                    
        </testset>
            
    </judging>
        
    <files>
                
        <resources>
                        
            <file path="files/olymp.sty"/>
                        
            <file path="files/problem.tex"/>
                        
            <file path="files/statements.ftl"/>
                        
            <file path="files/testlib.h" type="h.g++"/>
                    
        </resources>
                
        <executables>
                        
            <executable>
                                
                <source path="files/gen.cpp" type="cpp.g++17"/>
                                
                <binary path="files/gen.exe" type="exe.win32"/>
                            
            </executable>
                        
            <executable>
                                
                <source path="files/validator.cpp" type="cpp.g++17"/>
                                
                <binary path="files/validator.exe" type="exe.win32"/>
                            
            </executable>
                    
        </executables>
            
    </files>
        
    <assets>
                
        <checker name="std::ncmp.cpp" type="testlib">
                        
            <source path="files/check.cpp" type="cpp.g++17"/>
                        
            <binary path="check.exe" type="exe.win32"/>
                        
            <copy path="check.cpp"/>
                        
            <testset>
                                
                <test-count>0</test-count>
                                
                <input-path-pattern>files/tests/checker-tests/%02d</input-path-pattern>
                                
                <output-path-pattern>files/tests/checker-tests/%02d.o</output-path-pattern>
                                
                <answer-path-pattern>files/tests/checker-tests/%02d.a</answer-path-pattern>
                                
                <tests/>
                            
            </testset>
                    
        </checker>
                
        <validators>
                        
            <validator>
                                
                <source path="files/validator.cpp" type="cpp.g++17"/>
                                
                <binary path="files/validator.exe" type="exe.win32"/>
                                
                <testset>
                                        
                    <test-count>1</test-count>
                                        
                    <input-path-pattern>files/tests/validator-tests/%02d</input-path-pattern>
                                        
                    <tests>
                                                
                        <test verdict="valid"/>
                                            
                    </tests>
                                    
                </testset>
                            
            </validator>
                    
        </validators>
                
        <solutions>
                        
            <solution tag="memory-limit-exceeded">
                                
                <source path="solutions/dvasilev_ml_many_fenwicks.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/dvasilev_ml_many_fenwicks.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="accepted">
                                
                <source path="solutions/dvasilev_ok.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/dvasilev_ok.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="time-limit-exceeded">
                                
                <source path="solutions/dvasilev_tl_n2.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/dvasilev_tl_n2.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="rejected">
                                
                <source path="solutions/dvasilev_wa_overflow.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/dvasilev_wa_overflow.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="rejected">
                                
                <source path="solutions/ismagilov_10_assert.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/ismagilov_10_assert.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="rejected">
                                
                <source path="solutions/ismagilov_40.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/ismagilov_40.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="rejected">
                                
                <source path="solutions/ismagilov_40_assert.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/ismagilov_40_assert.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="time-limit-exceeded">
                                
                <source path="solutions/ismagilov_n2.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/ismagilov_n2.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="time-limit-exceeded">
                                
                <source path="solutions/ismagilov_n2_o3_scanf.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/ismagilov_n2_o3_scanf.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution tag="time-limit-exceeded">
                                
                <source path="solutions/ismagilov_n2_ofast_scanf.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/ismagilov_n2_ofast_scanf.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution note="nsqrt(n)" tag="main">
                                
                <source path="solutions/ismagilov_ok.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/ismagilov_ok.exe" type="exe.win32"/>
                            
            </solution>
                        
            <solution note="на самом деле - корневая" tag="accepted">
                                
                <source path="solutions/mip182_n2_fenwick.cpp" type="cpp.g++17"/>
                                
                <binary path="solutions/mip182_n2_fenwick.exe" type="exe.win32"/>
                            
            </solution>
                    
        </solutions>
            
    </assets>
        
    <properties>
                
        <property name="tests-wellformed" value="true"/>
            
    </properties>
        
    <stresses>
                
        <stress-count>2</stress-count>
                
        <stress-path-pattern>stresses/%03d</stress-path-pattern>
                
        <list>
                        
            <stress index="2" path="stresses/002"/>
                        
            <stress index="1" path="stresses/001"/>
                    
        </list>
            
    </stresses>
        
    <tags>
                
        <tag value="sqrt optimization"/>
                
        <tag value="sqrt-decomposition"/>
            
    </tags>
    
</problem>
